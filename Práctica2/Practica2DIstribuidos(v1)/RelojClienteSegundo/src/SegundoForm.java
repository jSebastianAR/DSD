/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Psychedelic
 */
import java.io.DataInputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;


public class SegundoForm extends javax.swing.JFrame implements Runnable{
Calendar calendario;
    Thread segundoHiloC1;
    Relojes segundoC1;
    int timer1 = 1000;
    String str;
    int valorRecibido=-1;
    int actual=0;
    
    SockerEscucha SocketReceive=null;
    /**
     * Creates new form SegundoForm
     */
    public SegundoForm() {
        segundoC1=new Relojes();
        initComponents();
        
        segundoHiloC1 = new Thread(this); //inicializando cada hilo       
        segundoHiloC1.start();
        
        
        SocketReceive = new SockerEscucha();
        SocketReceive.start();
             
    }
     @Override
    public void run() {
        Thread ct = Thread.currentThread();
        while (ct == segundoHiloC1) //mientras el hilo se este ejecutando
        {
            if (segundoC1.aux != 1) //si aun no entra por primera vez
            {
              
                segundoC1.calcula();
                
            }
           
            if(valorRecibido==-1)
            {
            
            LabelHora.setText(segundoC1.segundos );
            segundoC1.actualiza();
            }
            else
            {
                
                LabelHora.setText(segundoC1.segundos );
                segundoC1.actualiza2(actual);
                if(actual<=58)
                actual++;
                else actual=0;
                valorRecibido=-1;
            }
            System.out.   println("segunderoSeg: "+segundoC1.segundos);
            try {
                Thread.sleep(timer1);
            } catch (InterruptedException e) {
                System.out.println("Error de hiloSeg principal");
            }
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelHora = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelHora.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        LabelHora.setForeground(new java.awt.Color(0, 0, 255));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel1.setText("Segundos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(LabelHora, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(LabelHora, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SegundoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SegundoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SegundoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SegundoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SegundoForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelHora;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

public class SockerEscucha extends Thread {
    ServerSocket serverSocket;
    Socket socketC1;
    public SockerEscucha(){
        try {  
            serverSocket=new ServerSocket(6679);
            System.out.println("Serversocket creado en puerto 6679 para segundo");
            
        } catch (IOException ex) {
            System.out.println("Error creando Serversocket en puerto 6679 para segundo");
        }
    }
    @Override
    public void run() {
                try{  
                while(true){
                    socketC1=serverSocket.accept();//establishes connection   
                    
                    DataInputStream dis=new DataInputStream(socketC1.getInputStream());  
                    str=(String)dis.readUTF();
                    
                    segundoHiloC1.suspend();
                    String[] parts=str.split(":");
                    actual=Integer.parseInt(parts[2]);
                    if(parts[2]!=null)
                    {
                        valorRecibido++;
                        segundoC1.hora=(String)parts[0];
                        segundoC1.minutos=(String)parts[1];
                        segundoC1.segundos=(String)parts[2];
                        
                    }
                    LabelHora.setText(parts[2]);
                    
                    segundoHiloC1.resume();
                        
                    
                    socketC1.close();
                    
                    
                }
                }catch(Exception e){System.out.println("Error al escuchar para segundo"+e);}  
            }
    }

}


