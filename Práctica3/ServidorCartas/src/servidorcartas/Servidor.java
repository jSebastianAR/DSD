/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package servidorcartas;

import BD.Cls_Servidor;
import java.io.IOException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author jSeba
 */
public class Servidor extends javax.swing.JFrame implements Runnable{

    ServidorCartas server;
    Thread h1;
    DisplayImage IMAGEN;
    Cls_Servidor BD;
    int partidaNueva = 0;
    public Calendar calendario;
    public String parts[];
    public String fecha,hora_inicio,hora_fin;
    
    public Servidor() throws RemoteException {
        initComponents();
        server = new ServidorCartas();
        server.iniciarServidor();
        h1 = new Thread(this);
        IMAGEN = new DisplayImage();
        BD = new Cls_Servidor();
        calendario = Calendar.getInstance();
        h1.start();
        setLocationRelativeTo(null);
        setTitle("Servidor Juego De Cartas");
        setVisible(true);
        
        try {
            ImageIcon icon = IMAGEN.DisplayImage("0");//pone el inverso de la carta
            imagenCarta.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(Servidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagenCarta = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Reiniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Carta");

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Servidor Juego Cartas");

        Reiniciar.setText("Reiniciar");
        Reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(imagenCarta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(Reiniciar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(Reiniciar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imagenCarta, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReiniciarActionPerformed
        server.cartas = server.llenarLista(server.cartas);//llena la lista de donde se sacan las claves de las cartas
        partidaNueva = 0;
        
        try {
            ImageIcon icon = IMAGEN.DisplayImage("0");//pone el inverso de la carta
            imagenCarta.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(Servidor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ReiniciarActionPerformed

    @Override
    public void run() {
        Thread ct = Thread.currentThread();
        
        while(ct==h1)
        {
            //System.out.println("Server.peticion = "+ server.peticion);
            if(partidaNueva == 0)
            {
                partidaNueva=1;
                fecha = server.getFecha();//pone el mes/dia/año
                hora_inicio = server.getHora();//
                try {
                    System.out.println("fecha: "+fecha+" hora: "+hora_inicio);
                    BD.insertPartida(fecha, hora_inicio);
                } catch (SQLException ex) {
                    System.out.println("No se pudo hacer insertPartida");
                }
            }
            
            if(server.peticion==true)//Revisa si hay una nueva peticion
            {
                server.peticion = false;//como se acepta la peticion no se reciben en este momento
                String nombreCarta = server.cartaActual;//obtiene la carta entregada al usuario
                String clave = server.clave;//obtiene la clave de esa carta actual
                if(!nombreCarta.equals(" "))//sino recibe cadena vacía
                {    
                    System.out.println("nombreCarta: "+nombreCarta+" Clave: "+clave);
                    try {
                        ImageIcon icon = IMAGEN.DisplayImage(clave);//se busca la imagen en la carpeta con el nombre "clave" correspondiente
                        imagenCarta.setIcon(icon);//pone la imagen en el label
                        BD.insertPeticion(clave, server.ipJugadorActual, server.valorCartaActual); //inserta la peticion en la bd
                        if(server.cartas.isEmpty())//si ya no hay más elementos en la lista la partida termino
                        {
                            hora_fin = server.getHora();//llamada a funcion que retorna la hora actual
                            try{
                                BD.updatePartida(hora_fin, hora_inicio, fecha);
                            }catch(SQLException ex)
                            {
                                System.out.println("No se pudo hacer el updatePartida");
                            }
                        }
                    } catch (IOException ex) {
                        System.out.println("Error: "+ex);
                        JOptionPane.showMessageDialog(null,"No se encontro la imagen"); 
                    } catch (SQLException ex) {
                        System.out.println("No se pudo hacer el insertPeticion");
                    }
                }else
                {
                    JOptionPane.showMessageDialog(null,"Ingresa nombre de la cadena"); 
                }    
            }/*else
            {
                System.out.println("No se han encontrado peticiones");
            }*/
            
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(Servidor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Reiniciar;
    private javax.swing.JLabel imagenCarta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
